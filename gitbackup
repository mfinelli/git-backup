#!/bin/bash

# gitbackup: backup git repositories to AWS s3
# Copyright (C) 2015 Mario Finelli
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Get the local configuration.
source ~/.gitbackup

if [[ -z ${RECIPIENTS} || ${#RECIPIENTS[@]} -lt 1 ]]; then
    if [[ -z ${PASSPHRASE+x} ]]; then
        echo >&2 "You must configure recipients or an encryption password!"
        exit 1
    else
        ENC_MODE=2
    fi
else
    ENC_MODE=1
fi

if [[ ${#REPOS[@]} -lt 1 ]]; then
    echo >&2 "You must specify at least one repository to backup!"
    exit 1
fi

if [[ -z "$BUCKET" ]]; then
    echo >&2 "You must specify an s3 bucket for uploading!"
    exit 1
fi

# Make sure that cfv is installed.
command -v cfv >/dev/null 2>&1 || { \
    echo >&2 "Cfv is not installed. Aborting!"; exit 1; \
}

# Make sure s3cmd is installed.
command -v s3cmd >/dev/null 2>&1 || { \
    echo >&2 "S3cmd is not installed. Aborting!"; exit 1; \
}

# Make sure s3cmd has been configured.
if [ ! -f ~/.s3cfg ]; then
    echo >&2 "S3cmd has not been configured yet. Aborting!"
    exit 1
fi

WORKDIR=$(mktemp -d) || { \
    echo >&2 "Could not create temporary directory."; exit 1; \
}

cd "$WORKDIR"

for repo_url in "${REPOS[@]}"; do
    filename=$(basename $repo_url)
    repo="${filename%.*}"
    parent="${repo_url%/*}"
    project="${parent##*:}"

    mkdir -vp "$project"
    cd "$project"

    # http://stackoverflow.com/a/3960063
    git clone --mirror "$repo_url"

    cd ../
done

for project_dir in */; do
    cd "$project_dir"

    # http://serverfault.com/a/303400
    cfv -C -rr -t sha1

    cd ../
    tar -czvf "${project_dir%/}.tgz" "$project_dir"

    rm -rf "$project_dir"
done

for repo_tar in *.tgz; do
    if [[ $ENC_MODE -eq 1 ]]; then
        # build up the gpg command with all of the recipients
        cmd='gpg --always-trust -e'
        for rec in "${RECIPIENTS[@]}"; do
            cmd="$cmd -r $rec"
        done
        cmd="$cmd $repo_tar"

        echo "$cmd"
        $cmd
    else
        gpg --cipher-algo AES256 --symmetric --yes --batch \
            --passphrase="$PASSPHRASE" "$repo_tar"
    fi

    rm "$repo_tar"
done

for gpg_ar in *.tgz.gpg; do
    fn="${gpg_ar%.*}" # strip .gpg
    fn="${fn%.*}" # strip .tgz
    today=$(date +%Y%m%d)
    saveas="${fn}-${today}.tgz.gpg"

    s3cmd put \
        --acl-private \
        --guess-mime-type \
        --server-side-encryption \
        "$gpg_ar" \
        s3://"$BUCKET"/"$saveas"

    rm "$gpg_ar"
done

cd ../
rmdir "$WORKDIR"
